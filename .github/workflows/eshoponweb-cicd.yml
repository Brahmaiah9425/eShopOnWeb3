name: eShopOnWeb Build and Test

# Triggers
on: [push, workflow_dispatch]

# Environment variables
env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  RESOURCE-GROUP: rg-eshoponweb-brami  # Replace NAME with your resource group
  LOCATION: eastus  # Change the location as needed
  SUBSCRIPTION-ID: 2850e1d9-c302-4a1d-a682-1a7a802d6540  # Replace YOUR-SUBS-ID with your subscription ID
  WEBAPP-NAME: eshoponweb-uniquealias  # Replace NAME with a globally unique web app name

jobs:
  # Build, test, and publish .NET web project
  buildandtest:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Prepare runner for desired .NET version SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          dotnet-quality: 'preview'

      # Build the .NET project
      - name: Build with dotnet
        run: dotnet build ./eShopOnWeb.sln --configuration Release

      # Test the .NET project
      - name: Test with dotnet
        run: dotnet test ./eShopOnWeb.sln --configuration Release

      # Publish the .NET project
      - name: dotnet publish
        run: |
          dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
          cd ${{env.DOTNET_ROOT}}/myapp
          zip -r ../app.zip .

      # Upload the published website code artifacts
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ${{env.DOTNET_ROOT}}/app.zip  # Ensure this path is correct

  # Deploy the application to Azure
  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:
      # Download the app artifact from the previous job
      - name: Download .NET app artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app  # Ensure this matches the upload name
          path: ./net-app   # Path where you want to download the artifact

      # Login to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Azure WebApp using Bicep file
      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: ./bicep-template/webapp.bicep  # Ensure this path is correct
          parameters: 'webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }}'
          failOnStdErr: false

      # Publish website to Azure App Service using CLI (WebApp)
      - name: Publish Website to WebApp
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az webapp deploy --name ${{ env.WEBAPP-NAME }} --resource-group ${{ env.RESOURCE-GROUP }} --src-path ./net-app/app.zip --type zip
